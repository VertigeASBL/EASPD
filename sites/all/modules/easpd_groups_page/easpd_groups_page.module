<?php

/*=========*/
/* SUMMARY */
/*=========*/

/**
 * - Hooks
 * - Views
 * - Get content
 * - Permission helpers
 */

/*********
 * Hooks *
 *********/

/**
 * implements hook_menu
 *
 * Creates a "groups" page
 */
function easpd_groups_page_menu () {

    if ($groups = get_groups()) {
        $items['groups'] = array(
            'title'           => t('Groups'),
            'type'            => MENU_NORMAL_ITEM,
            'menu_name'       => 'user-menu',
            'tab_parent'      => '',
            'expanded'        => TRUE,
            'page callback'   => 'easpd_groups_page_view',
            'access callback' => TRUE,
        );
        foreach ($groups as $gid => $group) {
            $items['groups/'.$gid] = array(
                'title'            => $group->title,
                'type'             => MENU_NORMAL_ITEM,
                'menu_name'        => 'user-menu',
                'page callback'    => 'easpd_group_page_view',
                'page arguments'   => array($group),
                'access callback'  => 'node_access',
                'access arguments' => array('view', $group),
            );
        }
    }

    return $items;
}

/**
 * implements hook_theme
 *
 */
function easpd_groups_page_theme () {

  return array(
    'easpd_groups_page' => array(
      'template' => 'easpd_groups_page',
      'variables' => array(
        'groups' => NULL,
      ),
    ),
  );
}

/**
 * implements hook_node_access
 *
 */
function easpd_groups_page_node_access ($node, $op, $account) {

    if (in_array($node->type, array('group', 'group_content'))) {

        if (is_in_group($account, $node)) {
            if (is_write_access($op)
                && ( ! is_group_admin($account, $node))) {
                return NODE_ACCESS_DENY;
            } else {
                return NODE_ACCESS_ALLOW;
            }
        } else {
            return NODE_ACCESS_DENY;
        }
    }

    return NODE_ACCESS_IGNORE;
}

/**
 * implements hook_field_access
 *
 */
/* function easpd_groups_page_field_access ($op, $field, $entity_type, $entity, $account) { */

    /* var_dump($entity); */
    /* if (in_array($node->type, array('group', 'group_content'))) { */

    /*     /\* var_dump($node); *\/ */

    /*     if (is_in_group($account, $node)) { */
    /*         if (is_write_access($op) */
    /*             && ( ! is_group_admin($account, $node))) { */
    /*             return NODE_ACCESS_DENY; */
    /*         } else { */
    /*             return NODE_ACCESS_ALLOW; */
    /*         } */
    /*     } else { */
    /*         return NODE_ACCESS_DENY; */
    /*     } */
    /* } */

/*     return TRUE; */
/* } */

/*********
 * Views *
 *********/

/**
 * hook_menu's page callback
 *
 * Renders the "groups" page
 */
function easpd_groups_page_view () {

  // handy variables
  global $base_url;
  $module_path = drupal_get_path('module', 'easpd_map');

  $groups = get_groups();

  foreach ($groups as $gid => $group) {
    $group->og_contents = get_group_contents($gid);
  }

  // Build page
  drupal_set_title(t("Your groups"));

  $build['default_message'] = array(
    '#markup' => theme('easpd_groups_page',
                       array(
                         'groups' => $groups,
                       )),
  );
  return $build;
}

/**
 * hook_menu's page callback
 *
 * Renders the "groups/%node" pages
 */
function easpd_group_page_view ($node) {

    drupal_goto('node/' . $node->nid);
}

/***************
 * Get content *
 ***************/

function get_groups () {

  global $user;

  // SQL query
  $select = db_select('node', 'n')
    ->fields('n', array('nid', 'sticky', 'created'))
    ->condition('n.type', 'group');

  $nids  = $select->execute()->fetchCol();
  $nodes = node_load_multiple($nids);

  $allowed_nodes = array();
  foreach ($nodes as $nid => $node) {
    if (node_access('view', $node, $user)) {
      $allowed_nodes[$nid] = $node;
    }
  }

  return $allowed_nodes;
}

function get_group_contents ($group_nid) {

  global $user;

  // SQL query
  $select = db_select('node', 'n')
    ->fields('n', array('nid', 'sticky', 'created'))
    ->condition('n.type', 'group_content');

  $nids  = $select->execute()->fetchCol();
  $nodes = node_load_multiple($nids);

  if ($group_nid) {
    $filtered = array();
    foreach ($nodes as $nid => $node) {
      if ($group_nid === intval($node->og_group_ref['und'][0]['target_id'], 10)) {
        $filtered[$nid] = $node;
      }
    }
    $nodes = $filtered;
  }

  $allowed_nodes = array();
  foreach ($nodes as $nid => $node) {
    if (node_access('view', $node, $user)) {
      $allowed_nodes[$nid] = $node;
    }
  }

  return $allowed_nodes;
}

function get_gids ($node) {

    $gids = array();
    if ($node->type === 'group_content') {
        // find parent groups
        $select = db_select('og_membership', 'm')
            ->fields('m', array('gid'))
            ->condition('m.entity_type', 'node')
            ->condition('m.etid', $node->nid);

        $gids  = $select->execute()->fetchCol();
    } else if ($node->type === 'group') {
        $gids = array($node->nid);
    }
    return $gids;
}

/**********************
 * Permission helpers *
 *********************/

function is_in_group ($account, $node) {

    $gids = get_gids($node);

    $select = db_select('og_membership', 'm')
        ->fields('m', array('etid'))
        ->condition('m.entity_type', 'user')
        ->condition('m.etid', $account->uid)
        ->condition('m.gid', $gids);

    if (count($select->execute()->fetchCol()) > 0) {
        return TRUE;
    } else {
        return FALSE;
    }
}

function is_write_access ($op) {

    return in_array($op, array('create', 'delete', 'update'));
}

function is_group_admin ($account, $node) {

    $admin_rid = 1;
    $gids = get_gids($node);

    $select = db_select('og_users_roles', 'ur')
        ->fields('ur', array('rid'))
        ->condition('ur.gid', $gids)
        ->condition('ur.uid', $account->uid);

    if (in_array($admin_rid, $select->execute()->fetchCol())) {
        return TRUE;
    } else {
        return FALSE;
    }
}